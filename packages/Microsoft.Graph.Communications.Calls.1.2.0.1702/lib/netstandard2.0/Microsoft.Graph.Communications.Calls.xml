<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Graph.Communications.Calls</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Graph.Communications.Calls.CommunicationsClientExtensions">
            <summary>
            Extensions for stateful client.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CommunicationsClientExtensions.Calls(Microsoft.Graph.Communications.Client.ICommunicationsClient,System.Boolean)">
            <summary>
            Gets the call collection. This is the main entry point for the calling
            SDK. The return value of this function can be cached by the clients as
            required.
            </summary>
            <param name="client">The stateful client.</param>
            <param name="maintainState">
            If set to <c>true</c> the resulting <see cref="T:Microsoft.Graph.Communications.Resources.IResourceCollection"/>
            will hold all <see cref="T:Microsoft.Graph.Communications.Resources.IResource"/> instances it creates unless explicitly
            deleted (either by the service or by the developer).
            If set to <c>false</c> no <see cref="T:Microsoft.Graph.Communications.Resources.IResource"/> generated by
            the <see cref="T:Microsoft.Graph.Communications.Resources.IResourceCollection"/> or its children will be stored
            by the <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/>, instead it is the developers
            responsibility to control the lifetime of the generated instances.
            </param>
            <returns>
            The root singleton <see cref="T:Microsoft.Graph.Communications.Calls.ICallCollection"/> node.  Multiple invocations
            of this method will return the same <see cref="T:Microsoft.Graph.Communications.Calls.ICallCollection"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.IMediaSession">
            <summary>
            The IMediaSession interface. For local media scenarios,
            this session object represents the modalities and the
            media configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.IMediaSession.MediaSessionId">
            <summary>
            Gets the id of this media session.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.IMediaSession.Modalities">
            <summary>
            Gets the supported modalities
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.IMediaSession.GetMediaConfiguration">
            <summary>
            Get the media configuration
            </summary>
            <returns>
            A <see cref="T:Newtonsoft.Json.Linq.JObject"/> produced by the Media library.
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.CallCollectionExtensions">
            <summary>
            Extensions for call collections.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CallCollectionExtensions.AddAsync(Microsoft.Graph.Communications.Calls.ICallCollection,Microsoft.Graph.Communications.Calls.JoinMeetingParameters,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Join a new meeting with the provided parameters
            </summary>
            <param name="callCollection">The call collection.</param>
            <param name="parameters">The join meeting parameters.</param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The stateful call object once the call is joined.
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.CallExtensions">
            <summary>
            Extensions for calls.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CallExtensions.AnswerAsync(Microsoft.Graph.Communications.Calls.ICall,Microsoft.Graph.Communications.Calls.IMediaSession,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Answers a call with locally hosted media configuration.
            </summary>
            <param name="call">The call to be answered.</param>
            <param name="mediaSession">The media session object which defines
            the media configuration.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that completes after the request has been sent.
            This does not guarantee that the call has been answered. Any updates
            on call will be delivered via notification and can be observed using
            ICall.OnUpdated
            </returns>
            <exception cref="T:System.ArgumentNullException">When mediaSession is not specified.</exception>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CallExtensions.AnswerAsync(Microsoft.Graph.Communications.Calls.ICall,System.Collections.Generic.IEnumerable{Microsoft.Graph.MediaInfo},System.Collections.Generic.IEnumerable{Microsoft.Graph.Modality},System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Answers a call with service hosted media configuration.
            </summary>
            <param name="call">The call to be answered.</param>
            <param name="preFetchMedia">List of media files that service will cache,
            so that when playing these media files; the latency is lower.</param>
            <param name="acceptedModalities">The modalities to accept.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that completes after the request has been sent.
            This does not guarantee that the call has been answered. Any updates
            on call will be delivered via notification and can be observed using
            ICall.OnUpdated
            </returns>
            <exception cref="T:System.ArgumentNullException">When pre-fetch media is null.</exception>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CallExtensions.AnswerAsync(Microsoft.Graph.Communications.Calls.ICall,System.Collections.Generic.IEnumerable{Microsoft.Graph.Modality},System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Answers a call with service hosted media configuration.
            </summary>
            <param name="call">The call to be answered.</param>
            <param name="acceptedModalities">The modalities to accept.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that completes after the request has been sent.
            This does not guarantee that the call has been answered. Any updates
            on call will be delivered via notification and can be observed using
            ICall.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.CallExtensions.SetOutgoingCallOptions(Microsoft.Graph.Call,System.Nullable{System.Boolean})">
            <summary>
            Set outgoing call options for the call.
            </summary>
            <param name="call">The call.</param>
            <param name="allowGuestToBypassLobby">Enable bypass lobby when joining a group call as guest.</param>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.ParticipantExtensions">
            <summary>
            Extensions for the stateful participant resource.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ParticipantExtensions.InviteAsync(Microsoft.Graph.Communications.Calls.IParticipantCollection,Microsoft.Graph.IdentitySet,System.String,System.Threading.CancellationToken)">
            <summary>
            Invite a participant into the existing call.
            </summary>
            <param name="participantCollection">The participant collection into
            which a new participant is being invited.</param>
            <param name="identitySet">The identity set of the invited participant.</param>
            <param name="replacesCallId">The replaces call identifier. This is an optional
            field used for consultative transfer. This is used to bring a participant
            from an existing call.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            This does not guarantee that the participant has joined. Any updates
            on the participant collection will be delivered via notification and
            can be observed using IParticipantCollection.OnUpdated
            </returns>
            <exception cref="T:System.ArgumentNullException">If <see cref="T:Microsoft.Graph.IdentitySet"/> is null.</exception>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.ICall">
            <summary>
            The stateful call interface.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.Resource">
            <summary>
            Gets the call resource.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.TenantId">
            <summary>
            Gets the tenant identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.CorrelationId">
            <summary>
            Gets the correlation identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.ScenarioId">
            <summary>
            Gets the scenario identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.MediaSession">
            <summary>
            Gets the media session, if any.
            This is used only for Local Media Scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.ICall.Participants">
            <summary>
            Gets the Participants collection for this call.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.AnswerAsync(Microsoft.Graph.MediaConfig,System.Collections.Generic.IEnumerable{Microsoft.Graph.Modality},System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Answer an incoming call asynchronously.
            </summary>
            <param name="mediaConfig">The <see cref="T:Microsoft.Graph.MediaConfig" />.</param>
            <param name="acceptedModalities">The accepted list of <see cref="T:Microsoft.Graph.Modality" />.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            This does not guarantee that the call has been answered. Any updates
            on call will be delivered via notification and can be observed using
            ICall.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.RedirectAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.InvitationParticipantInfo},System.Nullable{System.Int32},System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Redirects the incoming call asynchronously.
            </summary>
            <param name="targets">The targets to whom the call should
            be redirected to.</param>
            <param name="timeout">The timeout after which the redirect is
            canceled.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.RejectAsync(System.Nullable{Microsoft.Graph.RejectReason},System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Rejects the incoming call asynchronously.
            </summary>
            <param name="rejectReason">The reason for call rejection.</param>
            <param name="callbackUri">The optional callback uri. Specifying this
            will override the default callback uri set when creating the
            <see cref="T:Microsoft.Graph.Communications.Client.ICommunicationsClient"/></param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.TransferAsync(Microsoft.Graph.InvitationParticipantInfo,System.Threading.CancellationToken)">
            <summary>
            Transfer a call to a given target.
            </summary>
            <param name="target">The target to transfer the call to.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            This does not guarantee that the call has been answered. Any updates
            on call will be delivered via notification and can be observed using
            ICall.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.PlayPromptAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.MediaPrompt},System.Action,System.Threading.CancellationToken)">
            <summary>
            Plays the specified media prompts.
            </summary>
            <param name="prompts">The list of <see cref="T:Microsoft.Graph.MediaPrompt" /> to play</param>
            <param name="promptsQueued">A callback indicating when the prompts have been queued, but have not yet completed playing.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:Microsoft.Graph.Communications.Calls.PlayOperationResult" /> with information on how the play operation completed.
            </returns>
            <exception cref="T:Microsoft.Graph.Communications.Core.Exceptions.ServiceException">An error has occurred when playing the prompt.</exception>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.CancelMediaProcessingAsync(System.Threading.CancellationToken)">
            <summary>
            Performs the CancelMediaProcessing operation. This cancels all or one of
            the ongoing media operations.
            </summary>
            <remarks>
            Media operations refer to the IVR operations PlayPrompt and RecordResponse, which are by
            default queued to process in order. CancelMediaProcessing cancels any operation that is
            in-processed as well as operations that are queued. For example, this can be used
            to clean up the IVR operation queue for a new media operation. However, this will not cancel a
            SubscribeToTone operation since it operates independent of any operation queue.
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent. <br/>
            Canceling the media processing here will be reflected by a failure in the
            specific operation (PlayPromptAsync, etc).
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.SubscribeToToneAsync(System.Threading.CancellationToken)">
            <summary>
            Subscribe to DTMF (dual-tone multi-frequency signaling).
            This allows you to be notified when the user presses keys on a
            "touchtone" phone.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent. <br/>
            The DTMF notifications will come on ICall.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.ChangeScreenSharingRoleAsync(Microsoft.Graph.ScreenSharingRole,System.Threading.CancellationToken)">
            <summary>
            Changes own sharing role in a vbss session.
            </summary>
            <param name="role">The role to change to.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.KeepAliveAsync(System.Threading.CancellationToken)">
            <summary>
            Send heartbeat to keep call alive.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.MuteAsync(System.Threading.CancellationToken)">
            <summary>
            Mutes the self participant asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The mute notification will come in on IParticipant.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.UnmuteAsync(System.Threading.CancellationToken)">
            <summary>
            Unmutes the self participant asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The unmute notification will come in on IParticipant.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.UpdateRecordingStatusAsync(Microsoft.Graph.RecordingStatus,System.Threading.CancellationToken)">
            <summary>
            Updates the recording status of the bot. Currently only applicable to Compliance Recording bots.
            </summary>
            <param name="status">The recording status..</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.RecordResponseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Graph.Prompt},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Records a short audio clip from the call.
            </summary>
            <param name="maxRecordDurationInSeconds"> Max duration for a record operation before stopping recording. Default = 5 minutes (300 seconds) </param>
            <param name="initialSilenceTimeoutInSeconds">Time to wait for user to start speaking for the first time before timing out. If the timeout is reached the recorder will abort the operation. Default = 5 sec</param>
            <param name="maxSilenceTimeoutInSeconds"> Maximum silence (pause) time allowed after a user has started speaking. If the timeout is reached the record operation will be aborted. Default = 5 sec</param>
            <param name="bargeInAllowed"> Optional Boolean flag to determines if the request should be queued up or barge into existing requests. Default = false </param>
            <param name="playBeep">If true, plays a beep to indicate to the user that they can start recording their message. Default = true  </param>
            <param name="prompts"> Collection of type MediaPrompt to play (if any) before recording starts. </param>
            <param name="stopTones"> DTMF characters that can be specified to indicate record is complete. </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns> See <see cref="T:Microsoft.Graph.Communications.Calls.RecordOperationResult" /> with information on how the record operation completed.</returns>
            <remarks>
            Not intended to record the entire call asynchronously; the maximum length of recording
            is five minutes (300 seconds).
            </remarks>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICall.DeleteAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes this call asynchronously.
            </summary>
            <param name="handleHttpNotFoundInternally">If the <see cref="T:Microsoft.Graph.Communications.Calls.ICall"/> is already gone, whether to handle the exception gracefully or not.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The completion of this task does not guarantee deletion. Confirmation of
            deletion comes as a notification and can be subscribed by ICall.OnUpdated and
            ICallCollection.OnUpdated
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.ICallCollection">
            <summary>
            The stateful call collection interface.
            </summary>
        </member>
        <member name="E:Microsoft.Graph.Communications.Calls.ICallCollection.OnIncoming">
            <summary>
            The incoming call event. This event is triggered when
            a new call is being received by the bot.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICallCollection.LogTeleconferenceDeviceQualityAsync(Microsoft.Graph.TeleconferenceDeviceQuality,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Log video teleconference device quality data.
            </summary>
            <param name="quality">Video teleconferencing device session level quality data.</param>
            <param name="tenantId">The tenant identitifer.</param>
            <param name="scenarioId">The scenario identitifer.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task</returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.ICallCollection.AddAsync(Microsoft.Graph.Call,Microsoft.Graph.Communications.Calls.IMediaSession,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Create a new call and add to the collection.
            </summary>
            <param name="resource">The call resource to be added.</param>
            <param name="mediaSession">The media session object, if any. This
            is valid only for application hosted media scenarios.</param>
            <param name="scenarioId">
            The scenario identitifer.
            This parameter should be used for tracking scenarios across multiple calls.
            Automatically generated by the SDK if not provided.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:Microsoft.Graph.Communications.Calls.ICall" /> that has been created. This call has not
            yet been established and those notifications will fire on ICall.OnUpdated
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.IParticipant">
            <summary>
            The stateful participant interface. This represents
            a single participant in a call.
            </summary>
            <seealso cref="T:Microsoft.Graph.Communications.Resources.IResource`2" />
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.IParticipant.Resource">
            <summary>
            Gets the stateful participant resource.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.IParticipant.MuteAsync(System.Threading.CancellationToken)">
            <summary>
            Performs the mute operation asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The mute notification will come in on IParticipant.OnUpdated
            </returns>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.IParticipant.DeleteAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes this participant asynchronously.
            </summary>
            <param name="handleHttpNotFoundInternally">If the <see cref="T:Microsoft.Graph.Communications.Calls.IParticipant"/> is already gone, whether to handle the exception gracefully or not.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The completion of this task does not guarantee deletion. Confirmation of
            deletion comes as a notification and can be subscribed by IParticipant.OnUpdated and
            IParticipantCollection.OnUpdated
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.IParticipantCollection">
            <summary>
            The stateful participant collection interface.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.IParticipantCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the participant from the collection.
            </summary>
            <param name="participantId">The participant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The found <see cref="T:Microsoft.Graph.Communications.Calls.IParticipant"/>.</returns>
            <exception cref="T:Microsoft.Graph.ServiceException">If the specified participant was not found.</exception>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.IParticipantCollection.InviteAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.InvitationParticipantInfo},System.Threading.CancellationToken)">
            <summary>
            Invites a list of participants given their identities.
            </summary>
            <param name="participants">
            The list of <see cref="T:Microsoft.Graph.InvitationParticipantInfo"/> to invite.
            </param>
            <param name="cancellationToken">
            The cancellation token.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that completes after the request has been sent.
            The invite updates will come in on IParticipantCollection.OnUpdated
            </returns>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.JoinMeetingParameters">
            <summary>
            Class to define parameters required for joining a meeting.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.#ctor(Microsoft.Graph.ChatInfo,Microsoft.Graph.MeetingInfo,Microsoft.Graph.Communications.Calls.IMediaSession)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.JoinMeetingParameters" /> class.
            Use this constructor for app hosted media.
            </summary>
            <param name="chatInfo">The chat information.</param>
            <param name="meetingInfo">The meeting information.</param>
            <param name="mediaSession">The media session.</param>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.#ctor(Microsoft.Graph.ChatInfo,Microsoft.Graph.MeetingInfo,System.Collections.Generic.IEnumerable{Microsoft.Graph.Modality},System.Collections.Generic.IEnumerable{Microsoft.Graph.MediaInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.JoinMeetingParameters" /> class.
            Use this constructor for service hosted media.
            </summary>
            <param name="chatInfo">The chat information.</param>
            <param name="meetingInfo">The meeting information.</param>
            <param name="requestedModalities">The list of modalities for the call</param>
            <param name="prefetchPrompts">The list of media files to prefetch</param>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.TenantId">
            <summary>
            Gets or sets the tenant id
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.CorrelationId">
            <summary>
            Gets or sets the correlation identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.GuestIdentity">
            <summary>
            Gets or sets the guest identity.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.AllowGuestToBypassLobby">
            <summary>
            Gets or sets a value indicating whether to bypass lobby when joining a group call as guest.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.ChatInfo">
            <summary>
            Gets the chat information.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.MeetingInfo">
            <summary>
            Gets the meeting information.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.MediaSession">
            <summary>
            Gets the media session.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.RequestedModalities">
            <summary>
            Gets the list of modalities to join the call with.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.PrefetchPrompts">
            <summary>
            Gets the list of media files to prefetch.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.JoinMeetingParameters.AdditionalData">
            <summary>
            Gets or sets the additional data.
            </summary>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.PlayOperationResult">
            <summary>
            Class to define parameters required for joining a meeting.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.PlayOperationResult.#ctor(Microsoft.Graph.ResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.PlayOperationResult" /> class.
            </summary>
            <param name="resultInfo">The result information.</param>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.PlayOperationResult.ResultInfo">
            <summary>
            Gets the result information.
            </summary>
            <value>
            The result information.
            </value>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.RecordOperationResult">
            <summary>
            Class to define parameters required for joining a meeting.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.RecordOperationResult.#ctor(System.String,System.String,Microsoft.Graph.ResultInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.RecordOperationResult" /> class.
            </summary>
            <param name="recordingLocation">The location of the recording.</param>
            <param name="recordingAccessToken">Token to access the recording.</param>
            <param name="resultInfo">The result information.</param>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.RecordOperationResult.RecordingLocation">
            <summary>
            Gets the recording location.
            Link to the "live raw stream as it is being recorded" or "recorded stream after it’s recorded".
            Client need to call GET request on this link passing RecordingAccessToken as bearer token in order to download the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.RecordOperationResult.RecordingAccessToken">
            <summary>
            Gets the recording access token required to retrieve the recording.
            </summary>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.RecordOperationResult.ResultInfo">
            <summary>
            Gets the result information.
            </summary>
            <value>
            The result information.
            </value>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.StatefulCall">
            <summary>
            The stateful call.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.#ctor(Microsoft.Graph.Communications.Client.IInternalCommunicationsClient,Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.Call,System.Guid,Microsoft.Graph.ICallRequestBuilder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.StatefulCall" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="graphClient">The graph client.</param>
            <param name="resource">The resource.</param>
            <param name="scenarioId">The scenario identifier.</param>
            <param name="uriBuilder">The uri builder.</param>
            <param name="maintainState">if set to <c>true</c> maintain state.</param>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.StatefulCall.Participants">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.StatefulCall.TenantId">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.StatefulCall.CorrelationId">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.StatefulCall.ScenarioId">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Graph.Communications.Calls.StatefulCall.MediaSession">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.InitializeNotificationSubscription(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.AnswerAsync(Microsoft.Graph.MediaConfig,System.Collections.Generic.IEnumerable{Microsoft.Graph.Modality},System.String,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.RedirectAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.InvitationParticipantInfo},System.Nullable{System.Int32},System.String,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.RejectAsync(System.Nullable{Microsoft.Graph.RejectReason},System.String,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.TransferAsync(Microsoft.Graph.InvitationParticipantInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.PlayPromptAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.MediaPrompt},System.Action,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.CancelMediaProcessingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.SubscribeToToneAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.ChangeScreenSharingRoleAsync(Microsoft.Graph.ScreenSharingRole,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.KeepAliveAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.MuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.UnmuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.UpdateRecordingStatusAsync(Microsoft.Graph.RecordingStatus,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.RecordResponseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Graph.Prompt},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.RehydrateAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.NotificationReceived(Microsoft.Graph.Communications.Core.Notifications.NotificationEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCall.UpdateScenarioId(System.Guid)">
            <summary>
            Updates the scenario id.
            </summary>
            <param name="scenarioId">The scenario identifier.</param>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.StatefulCallCollection">
            <summary>
            The call collection.
            </summary>
            <seealso cref="T:Microsoft.Graph.Communications.Calls.ICallCollection" />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.#ctor(Microsoft.Graph.Communications.Client.IInternalCommunicationsClient,Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.ICloudCommunicationsCallsCollectionRequestBuilder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.StatefulCallCollection" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="graphClient">The graph client.</param>
            <param name="uriBuilder">The uri builder.</param>
            <param name="canMaintainState">if set to <c>true</c> can maintain state.</param>
            <exception cref="T:System.ArgumentNullException">When the client or builder are null.</exception>
        </member>
        <member name="E:Microsoft.Graph.Communications.Calls.StatefulCallCollection.OnIncoming">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.AddAsync(Microsoft.Graph.Call,Microsoft.Graph.Communications.Calls.IMediaSession,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.LogTeleconferenceDeviceQualityAsync(Microsoft.Graph.TeleconferenceDeviceQuality,System.String,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.TerminateAsync(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.NotificationReceived(Microsoft.Graph.Communications.Core.Notifications.NotificationEventArgs)">
            <summary>
            Triggered when a resource notification is received.
            </summary>
            <param name="args">The <see cref="T:Microsoft.Graph.Communications.Core.Notifications.NotificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.GetGraphClient(Microsoft.Graph.Call,System.String,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.GenerateEntityAsync(Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.Call,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.CreateStatefulResourceFromEntity(Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.Call,System.String,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulCallCollection.PopulateSourceIdentity(Microsoft.Graph.Call)">
            <summary>
            Populates the source identity with self information.
            </summary>
            <param name="resource">The resource.</param>
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.StatefulParticipant">
            <summary>
            The stateful participant.
            </summary>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipant.#ctor(Microsoft.Graph.Communications.Client.IInternalCommunicationsClient,Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.Participant,Microsoft.Graph.IParticipantRequestBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.StatefulParticipant" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="graphClient">The graph client.</param>
            <param name="resource">The resource.</param>
            <param name="uriBuilder">The uri builder.</param>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipant.MuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection">
            <summary>
            The participant collection.
            </summary>
            <seealso cref="T:Microsoft.Graph.Communications.Calls.IParticipantCollection" />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection.#ctor(Microsoft.Graph.Communications.Client.IInternalCommunicationsClient,Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.ICallParticipantsCollectionRequestBuilder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="graphClient">The graph client.</param>
            <param name="uriBuilder">The uri builder.</param>
            <param name="canMaintainState">if set to <c>true</c> can maintain state.</param>
            <exception cref="T:System.ArgumentNullException">If the client or the builder are null.</exception>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection.InviteAsync(System.Collections.Generic.IEnumerable{Microsoft.Graph.InvitationParticipantInfo},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Graph.Communications.Calls.StatefulParticipantCollection.CreateStatefulResourceFromEntity(Microsoft.Graph.Communications.Common.Transport.IGraphClient,Microsoft.Graph.Participant,System.String,System.Guid)">
            <inheritdoc />
        </member>
    </members>
</doc>
